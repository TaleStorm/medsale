import React from 'react';
import { Table, Tag} from 'antd';
import { useRouter } from 'next/router';
import { HOST } from '../../constants';

const columns = [
  {
    title: '–ö–ª–∏–µ–Ω—Ç',
    dataIndex: 'title',
    key: 'title',
    render: (text) => <a>{text}</a>,
  },
  {
    title: '–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∞',
    dataIndex: 'date',
    key: 'date',
  },
  {
    title: '–û–±–ª–∞—Å—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
    dataIndex: 'type',
    key: 'type',
  },
  {
    sorter: (a, b) => a.price - b.price,
    title: '–í—ã–ø–ª–∞—Ç—ã',
    dataIndex: 'price',
    key: 'price',
  },
  {
    title: '–°—Ç–∞—Ç—É—Å',
    key: 'tags',
    dataIndex: 'tags',
    render: (tags) => (
      <>
        {tags.map((tag) => {
          let color = 'grey';
          if (tag === '–í –û–ë–†–ê–ë–û–¢–ö–ï') {
            color = 'blue';
          }
          if (tag === '–ó–ê–í–ï–†–®–Å–ù') {
            color = 'green';
          }
          if (tag === '–û–¢–ú–ï–ù–Å–ù') {
            color = 'volcano';
          }
          if (tag === '–¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø') {
            color = 'yellow';
          }
          return (
            <Tag color={color} key={tag}>
              {tag.toUpperCase()}
            </Tag>
          );
        })}
      </>
    ),
    filters: [
      {
        text: '–í –û–ë–†–ê–ë–û–¢–ö–ï',
        value: '–í –û–ë–†–ê–ë–û–¢–ö–ï',
      },
      {
        text: '–ó–ê–í–ï–†–®–Å–ù',
        value: '–ó–ê–í–ï–†–®–Å–ù',
      },
      {
        text: '–û–¢–ú–ï–ù–Å–ù',
        value: '–û–¢–ú–ï–ù–Å–ù',
      },
      {
        text: '–¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø',
        value: '–¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø',
      },
    ],
    onFilter: (value, record) => record.tags.includes(value),
  },
];

const data = [
  {
    id: '86e6c7de-9e54-412e-8851-40331280d936',
    key: '1',
    title: 'Anna Brown –¢–µ—Å—Ç–æ–≤—ã–π API',
    price: 5000,
    date: '04.04.2021',
    type: '–ú–†–¢ –º—è–≥–∫–∏—Ö —Ç–∫–∞–Ω–µ–π —à–µ–∏',
    tags: ['–í –û–ë–†–ê–ë–û–¢–ö–ï'],
  },
  {
    id: 200,
    key: '2',
    title: 'Jim Green',
    price: 1500,
    date: '03.03.2021',
    type: '–ú–†–¢ —Å–ø–∏–Ω—ã',
    tags: ['–û–¢–ú–ï–ù–Å–ù'],
  },
  {
    id: 300,
    key: '3',
    title: 'Boris Black',
    price: 5200,
    date: '02.02.2021',
    type: '–ú–†–¢ –≥–æ–ª–æ–≤—ã',
    tags: ['–ó–ê–í–ï–†–®–Å–ù'],
  },
  {
    id: 400,
    key: '4',
    title: 'Kris Ivanova',
    price: 6400,
    date: '02.02.2021',
    type: '–ú–†–¢ –≥–æ–ª–æ–≤—ã',
    tags: ['–í –û–ë–†–ê–ë–û–¢–ö–ï', '–¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø'],
  },
];

const LeadsTable = ({ json, orders }) => {
  console.log('üöÄ ~ file: index.jsx ~ line 118 ~ LeadsTable ~ json', json)
  console.log('üöÄ ~ file: index.jsx ~ line 119 ~ LeadsTable ~ orders', orders)
  const router = useRouter();
  return (
    <div>
      <Table columns={columns} dataSource={orders} onRow={(record, rowIndex) => {
    return {
      onClick: event => {
        router.push(`/leads/${record._id}`)
      },
    };
  }} />
    </div>
  );
};

LeadsTable.getInitialProps = async (ctx) => {
  // const { id } = ctx.query;

  const res = await fetch(`${HOST}/api/v1/orders`)
  let json = null;
  try {
    json = await res.json();
  } catch(err) {
    console.log('—Å–ª–æ–º–∞–ª—Å—è json');
    console.dir(err);
  }

  const orders = json.map(el => {
    el.tags = ['–í –†–ê–ë–û–¢–ï'];
    el.title = '–ü–µ—Ç—Ä–æ–≤ –ê. –ù.';
    el.date = '22.08.2021';
    return el;
  })

  return { json, orders };
};

export default LeadsTable;